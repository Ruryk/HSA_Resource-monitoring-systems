version: '3.6'
services:
  nginx:
    image: nginx:latest
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

  mongo:
    image: mongo:4.2
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
    ports:
      - "127.0.0.1:9200:9200"

  app:
    image: node:latest
    volumes:
      - ./app:/usr/src/app
    working_dir: /usr/src/app
    command: npm start
    depends_on:
      - mongo
      - elasticsearch

  telegraf:
    image: telegraf:1.18-alpine
    volumes:
    - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '127.0.0.1:8125:8125/udp'

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

volumes:
  grafana_data: {}
  influxdb_data: {}
  mongodb_data: {}
